name: Build & Publish Docker Image

on:
  workflow_run:
    types:
      - completed
    workflows:
      - Test Coverage & Build

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: havlli
          POSTGRES_PASSWORD: password
          POSTGRES_DB: eventpilot
        ports:
          - 5555:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4.1.0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'
          cache: 'maven'

      - name: Generate .env File
        run: |
          echo "DISCORD_BOT_TOKEN=${{ secrets.DISCORD_BOT_TOKEN }}" > .env
          echo "TEST_DISCORD_BOT_TOKEN=${{ secrets.TEST_DISCORD_BOT_TOKEN }}" >> .env
          echo "Generated .env file:"
          cat .env

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Get version from pom.xml
        id: version
        run: |
          version=$(grep -o '<application.version>[^<]*</application.version>' pom.xml | sed 's/<application.version>\(.*\)<\/application.version>/\1/')
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Build and Publish Docker Image
        env:
          FINAL_VERSION: ${{ steps.version.outputs.version }}.${{ github.run_number }}

        run: |
          echo "FINAL_VERSION: $FINAL_VERSION"
          mvn spring-boot:build-image -Dbuild.number=${{ env.FINAL_VERSION }}
          docker ps